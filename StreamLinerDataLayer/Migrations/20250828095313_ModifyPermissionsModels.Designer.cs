// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreamLinerDataLayer.Data;

#nullable disable

namespace StreamLinerDataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250828095313_ModifyPermissionsModels")]
    partial class ModifyPermissionsModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ApplicationRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ACC")
                        .HasColumnType("bit");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("BPM")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CMS")
                        .HasColumnType("bit");

                    b.Property<bool>("CRM")
                        .HasColumnType("bit");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DMS")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRCompanyCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("HRDepartmentDepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("HRM")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("INV")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal?>("Maxquota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Oper")
                        .HasColumnType("bit");

                    b.Property<bool>("PRC")
                        .HasColumnType("bit");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SlS")
                        .HasColumnType("bit");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal?>("Volumequota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("pwd")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HRCompanyCompanyId");

                    b.HasIndex("HRDepartmentDepartmentId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.DocTemplate", b =>
                {
                    b.Property<int>("TemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TemplateId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TemplateBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("TemplateId");

                    b.ToTable("DocTemplates");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Document", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DocumentId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DocumentSerial")
                        .HasColumnType("int");

                    b.Property<int>("DocumentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FinalSerial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsmetaData")
                        .HasColumnType("bit");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Size")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentId");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("DocumentTypeId");

                    b.HasIndex("FolderId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("FieldId");

                    b.HasIndex("TypeId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FieldType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("TypeId");

                    b.ToTable("FieldType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FileFormat", b =>
                {
                    b.Property<int>("FormatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormatId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("format")
                        .HasColumnType("int");

                    b.HasKey("FormatId");

                    b.ToTable("FileFormats");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Folder", b =>
                {
                    b.Property<int>("FolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FolderId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FolderPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("FolderId");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Folders");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FolderDocumentPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ForDocument")
                        .HasColumnType("bit");

                    b.Property<bool>("ForFolder")
                        .HasColumnType("bit");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FolderDocumentPermission");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FolderPermissionScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FolderPermissionScope");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FolderUserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FolderDocumentPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<int>("FolderPermissionId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FolderDocumentPermissionId");

                    b.HasIndex("FolderId");

                    b.HasIndex("UserId");

                    b.ToTable("FolderUserPermissions");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FolderUserPermissionScope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FolderId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionScopeId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FolderUserPermissionScope");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Groups", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Meeting", b =>
                {
                    b.Property<int>("MeetingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MettingRoomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateMeeting")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<DateTime>("duedatemeeting")
                        .HasColumnType("datetime2");

                    b.Property<string>("eventOutlookId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("priorty")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("startTimeMeeting")
                        .HasColumnType("time");

                    b.Property<bool>("syncOutlook")
                        .HasColumnType("bit");

                    b.HasKey("MeetingId");

                    b.HasIndex("MettingRoomId");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MeetingRoom", b =>
                {
                    b.Property<int>("MeetingRoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingRoomId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("MeetingRoomId");

                    b.ToTable("MeetingRooms");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MeetingUser", b =>
                {
                    b.Property<int>("MeetingUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingUserId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MeetingId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("action")
                        .HasColumnType("int");

                    b.Property<int?>("userIdFrom")
                        .HasColumnType("int");

                    b.Property<int?>("userIdTo")
                        .HasColumnType("int");

                    b.HasKey("MeetingUserId");

                    b.HasIndex("MeetingId");

                    b.HasIndex("userIdFrom");

                    b.HasIndex("userIdTo");

                    b.ToTable("MeetingUsers");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MetaDataTemplate", b =>
                {
                    b.Property<int>("MetaDataTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetaDataTemplateId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("MetaDataTemplateId");

                    b.ToTable("MetaDataTemplates");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MetaDataTemplateField", b =>
                {
                    b.Property<int>("MetaDataTemplateFieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetaDataTemplateFieldId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("MetaDataTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("MetaDataTemplateFieldId");

                    b.HasIndex("FieldId");

                    b.HasIndex("MetaDataTemplateId");

                    b.ToTable("MetaDataTemplateFields");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Projects", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Closed")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Project_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Project_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceCity", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("ResourceCity");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceGender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("ResourceGender");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceMaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritalStatusId"));

                    b.Property<string>("MaritalStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("ResourceMaritalStatus");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceNationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NationalityId");

                    b.ToTable("ResourceNationality");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Strlcs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseKey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicenseStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxQuote")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfAdmins")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfParticipants")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfUsers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Strlcs");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TaskList", b =>
                {
                    b.Property<int>("TaskListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskListId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("priorty")
                        .HasColumnType("int");

                    b.HasKey("TaskListId");

                    b.ToTable("TaskLists");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TasksAttachment", b =>
                {
                    b.Property<int>("TasksAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TasksAttachmentId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FileSize")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TasksAttachmentId");

                    b.HasIndex("FileTypeId");

                    b.HasIndex("TaskId");

                    b.ToTable("TasksAttachments");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TasksUser", b =>
                {
                    b.Property<int>("TaskUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskUserId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int?>("userIdFrom")
                        .HasColumnType("int");

                    b.Property<int?>("userIdTo")
                        .HasColumnType("int");

                    b.HasKey("TaskUserId");

                    b.HasIndex("TaskId");

                    b.HasIndex("userIdFrom");

                    b.HasIndex("userIdTo");

                    b.ToTable("TasksUsers");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.UsersGroup", b =>
                {
                    b.Property<int>("UsersGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsersGroupId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("UsersGroupId");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersGroup");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.FinancialYear", b =>
                {
                    b.Property<int>("FinancialYearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialYearID"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinancialYearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("FinancialYearID");

                    b.ToTable("FinancialYear");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.FingerPrint", b =>
                {
                    b.Property<int>("FingerPrintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FingerPrintId"));

                    b.Property<string>("ACNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUpload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UploadFileId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("FingerPrintId");

                    b.ToTable("FingerPrint");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAdvancePayment", b =>
                {
                    b.Property<int>("HRAdvancePaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRAdvancePaymentId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AdvancePaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("AdvancePaymentValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paided")
                        .HasColumnType("bit");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRAdvancePaymentId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRAdvancePayment");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAllowance", b =>
                {
                    b.Property<int>("HRAllowanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRAllowanceId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AllowanceDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("AllowanceDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("AllowanceHour")
                        .HasColumnType("int");

                    b.Property<decimal>("AllowanceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HRAllowanceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRAllowanceId");

                    b.HasIndex("HRAllowanceTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRAllowance");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAllowanceType", b =>
                {
                    b.Property<int>("HRAllowanceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRAllowanceTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRAllowanceTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRAllowanceTypeId");

                    b.ToTable("HRAllowanceType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRApplication", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ApplicantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Appreciation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Availability")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExpectedSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HRDegreeId")
                        .HasColumnType("int");

                    b.Property<int>("HRStageId")
                        .HasColumnType("int");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ProposedSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferredBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ApplicationId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("HRDegreeId");

                    b.HasIndex("HRStageId");

                    b.HasIndex("SourceId");

                    b.ToTable("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAttend", b =>
                {
                    b.Property<int>("AttendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CheckDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("CheckTypeIn")
                        .HasColumnType("int");

                    b.Property<int>("CheckTypeOut")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HRShiftAttendId")
                        .HasColumnType("int");

                    b.Property<string>("IconIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OverTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyOut")
                        .HasColumnType("int");

                    b.Property<int>("Penaltyin")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AttendId");

                    b.HasIndex("HRShiftAttendId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRAttend");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAttendRole", b =>
                {
                    b.Property<int>("AttendRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendRoleId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LateMin")
                        .HasColumnType("int");

                    b.Property<string>("NameAttendRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PenaltyMin")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AttendRoleId");

                    b.ToTable("HRAttendRole");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAttendances", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttendanceId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AttendDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("CheckType")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HRShiftAttendId")
                        .HasColumnType("int");

                    b.Property<double>("INLatitude")
                        .HasColumnType("float");

                    b.Property<double>("INLongitude")
                        .HasColumnType("float");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OUTLatitude")
                        .HasColumnType("float");

                    b.Property<double>("OUTLongitude")
                        .HasColumnType("float");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyMin")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AttendanceId");

                    b.HasIndex("HRShiftAttendId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRAttendance");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRBenefits", b =>
                {
                    b.Property<int>("HRBenefitsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRBenefitsId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BenefitDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BenefitDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BenefitHour")
                        .HasColumnType("int");

                    b.Property<decimal>("BenefitValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HRBenefitsTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRBenefitsId");

                    b.HasIndex("HRBenefitsTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRBenefits");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRBenefitsType", b =>
                {
                    b.Property<int>("HRBenefitsTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRBenefitsTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRBenefitsTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRBenefitsTypeId");

                    b.ToTable("HRBenefitsType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companylogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("CompanyId");

                    b.ToTable("HRCompany");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRContract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContractTypeId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("ContractId");

                    b.HasIndex("ContractTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRContract");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRContractType", b =>
                {
                    b.Property<int>("HRContractTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRContractTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRContractTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRContractTypeId");

                    b.ToTable("HRContractType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDayType", b =>
                {
                    b.Property<int>("HRDayTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDayTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRDayTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRDayTypeId");

                    b.ToTable("HRDayType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDegree", b =>
                {
                    b.Property<int>("HRDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDegreeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DegreeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRDegreeId");

                    b.ToTable("HRDegree");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDepartment", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartmentDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HRManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("HRDepartment");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDocuments", b =>
                {
                    b.Property<int>("HRDocumentsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRDocumentsId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRDocumentsId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("HRDocuments");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HREmployeeRule", b =>
                {
                    b.Property<int>("EmployeeRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeRuleId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialYearID")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationRuleId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("EmployeeRuleId");

                    b.HasIndex("FinancialYearID");

                    b.HasIndex("PartnerId");

                    b.HasIndex("VacationRuleId");

                    b.ToTable("HREmployeeRule");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRExpenses", b =>
                {
                    b.Property<int>("HRExpensesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRExpensesId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpensesDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("HRExpensesValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRExpensesId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRExpenses");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRJobPositions", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedNewEmployees")
                        .HasColumnType("int");

                    b.Property<string>("JobDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("HRJobPositions");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRMission", b =>
                {
                    b.Property<int>("HRMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRMissionId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HRMissionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("MissionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MissionState")
                        .HasColumnType("int");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRMissionId");

                    b.HasIndex("HRMissionTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRMission");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRMissionType", b =>
                {
                    b.Property<int>("HRMissionTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRMissionTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRMissionTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRMissionTypeId");

                    b.ToTable("HRMissionType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRNotes", b =>
                {
                    b.Property<int>("HRApplicationNotesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRApplicationNotesId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRApplicationNotesId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("HRNotes");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HROverTimes", b =>
                {
                    b.Property<int>("OverTimesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OverTimesId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OverTimeDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OverTimeValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("OverTimesId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HROverTimes");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPenalty", b =>
                {
                    b.Property<int>("HRPenaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRPenaltyId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HRPenaltyTypesId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PenaltyDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PenaltyDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PenaltyHour")
                        .HasColumnType("int");

                    b.Property<decimal>("PenaltyValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRPenaltyId");

                    b.HasIndex("HRPenaltyTypesId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRPenalty");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPenaltyTypes", b =>
                {
                    b.Property<int>("HRPenaltyTypesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRPenaltyTypesId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRPenaltyTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRPenaltyTypesId");

                    b.ToTable("HRPenaltyTypes");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPermission", b =>
                {
                    b.Property<int>("HRPermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRPermissionId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MonthCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PermissionState")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRPermissionId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRPermission");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<int>("HRRequestStateId")
                        .HasColumnType("int");

                    b.Property<int>("HRRequestTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("HRRequestTypeId");

                    b.HasIndex("PartnerId");

                    b.ToTable("HRRequest");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRRequestType", b =>
                {
                    b.Property<int>("HRRequestTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRRequestTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRRequestTypeId");

                    b.ToTable("HRRequestType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRShiftAttend", b =>
                {
                    b.Property<int>("HRShiftAttendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRShiftAttendId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ShiftCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("ShiftEnd")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("ShiftStart")
                        .HasColumnType("time");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRShiftAttendId");

                    b.ToTable("HRShiftAttend");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRSource", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SourceId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("HRSourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("SourceId");

                    b.ToTable("HRSource");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRSpecialistLevel", b =>
                {
                    b.Property<int>("SpecialistLevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialistLevelId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialistLevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("SpecialistLevelId");

                    b.ToTable("HRSpecialistLevel");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRStage", b =>
                {
                    b.Property<int>("HRStageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRStageId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requirements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRStageId");

                    b.ToTable("HRStage");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRTeamWork", b =>
                {
                    b.Property<int>("HRTeamWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRTeamWorkId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HRTeamWorkName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("HRTeamWorkId");

                    b.ToTable("HRTeamWork");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRTeamWorkDetails", b =>
                {
                    b.Property<int>("HRTeamWorkDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HRTeamWorkDetailsId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HRTeamWorkId")
                        .HasColumnType("int");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("HRTeamWorkDetailsId");

                    b.HasIndex("HRTeamWorkId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("userId");

                    b.ToTable("HRTeamWorkDetails");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationRule", b =>
                {
                    b.Property<int>("VacationRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationRuleId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VacationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacationRuleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("VacationRuleId");

                    b.ToTable("HRVacationRule");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationRuleLine", b =>
                {
                    b.Property<int>("VacationRuleLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationRuleLineId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationRuleId")
                        .HasColumnType("int");

                    b.Property<int>("VacationStock")
                        .HasColumnType("int");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("VacationRuleLineId");

                    b.HasIndex("VacationRuleId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("HRVacationRuleLine");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationType", b =>
                {
                    b.Property<int>("VacationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationTypeId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VacationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("VacationTypeId");

                    b.ToTable("HRVacationType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacations", b =>
                {
                    b.Property<int>("VacationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacationId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Allowed")
                        .HasColumnType("bit");

                    b.Property<string>("AllowedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<string>("ApprovedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinancialYearID")
                        .HasColumnType("int");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VacationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VacationDays")
                        .HasColumnType("int");

                    b.Property<int>("VacationState")
                        .HasColumnType("int");

                    b.Property<int>("VacationStock")
                        .HasColumnType("int");

                    b.Property<int>("VacationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("VacationId");

                    b.HasIndex("PartnerId");

                    b.HasIndex("VacationTypeId");

                    b.ToTable("HRVacations");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRschema", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("HRschema");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.Partner", b =>
                {
                    b.Property<int>("PartnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartnerId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("BankAccountNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthData")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int?>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Customer")
                        .HasColumnType("bit");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Employee")
                        .HasColumnType("bit");

                    b.Property<string>("EmployeeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("FingerPrintId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("HRShiftAttendId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HireData")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Insurance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.Property<int>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartnerType")
                        .HasColumnType("int");

                    b.Property<int>("PassportNo")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Vendor")
                        .HasColumnType("bit");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartnerId");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MaritalStatusId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.UploadFile", b =>
                {
                    b.Property<int>("UploadFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UploadFileId"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CreateId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeleteId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdateId")
                        .HasColumnType("int");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("UploadFileId");

                    b.ToTable("UploadFile");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ApplicationUser", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRCompany", null)
                        .WithMany("Users")
                        .HasForeignKey("HRCompanyCompanyId");

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRDepartment", null)
                        .WithMany("Users")
                        .HasForeignKey("HRDepartmentDepartmentId");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Document", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany("Documents")
                        .HasForeignKey("ApplicationUserId");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.FileFormat", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.Folder", "folder")
                        .WithMany("Documents")
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DocumentType");

                    b.Navigation("folder");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Field", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.FieldType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Folder", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", null)
                        .WithMany("Folders")
                        .HasForeignKey("ApplicationUserId");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.FolderUserPermission", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.FolderDocumentPermission", "FolderDocumentPermission")
                        .WithMany()
                        .HasForeignKey("FolderDocumentPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.Folder", "Folder")
                        .WithMany()
                        .HasForeignKey("FolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Folder");

                    b.Navigation("FolderDocumentPermission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Meeting", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.MeetingRoom", "MettingRoom")
                        .WithMany("Mettings")
                        .HasForeignKey("MettingRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MettingRoom");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MeetingUser", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.Meeting", "Meeting")
                        .WithMany("MettingUsers")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "UserFrom")
                        .WithMany()
                        .HasForeignKey("userIdFrom");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "UserTo")
                        .WithMany()
                        .HasForeignKey("userIdTo");

                    b.Navigation("Meeting");

                    b.Navigation("UserFrom");

                    b.Navigation("UserTo");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MetaDataTemplateField", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.Field", "Field")
                        .WithMany("MetaDataTemplateFields")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.MetaDataTemplate", "MetaDataTemplate")
                        .WithMany("MetaDataTemplateFields")
                        .HasForeignKey("MetaDataTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Field");

                    b.Navigation("MetaDataTemplate");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TasksAttachment", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.FileFormat", "FileType")
                        .WithMany()
                        .HasForeignKey("FileTypeId");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.TaskList", "Tasks")
                        .WithMany("TasksAttachments")
                        .HasForeignKey("TaskId");

                    b.Navigation("FileType");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TasksUser", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.TaskList", "Tasks")
                        .WithMany("TasksUsers")
                        .HasForeignKey("TaskId");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "UserFrom")
                        .WithMany()
                        .HasForeignKey("userIdFrom");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "UserTo")
                        .WithMany()
                        .HasForeignKey("userIdTo");

                    b.Navigation("Tasks");

                    b.Navigation("UserFrom");

                    b.Navigation("UserTo");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.UsersGroup", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.Groups", "Group")
                        .WithMany("UsersGroup")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAdvancePayment", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAllowance", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRAllowanceType", "HRAllowanceType")
                        .WithMany("HRAllowance")
                        .HasForeignKey("HRAllowanceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRAllowanceType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRApplication", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRDepartment", "HRDepartment")
                        .WithMany("HRApplication")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRDegree", "HRDegree")
                        .WithMany("HRApplication")
                        .HasForeignKey("HRDegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRStage", "HRStage")
                        .WithMany("HRApplication")
                        .HasForeignKey("HRStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRSource", "HRSource")
                        .WithMany("HRApplication")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRDegree");

                    b.Navigation("HRDepartment");

                    b.Navigation("HRSource");

                    b.Navigation("HRStage");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAttend", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRShiftAttend", "HRShiftAttend")
                        .WithMany()
                        .HasForeignKey("HRShiftAttendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRShiftAttend");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAttendances", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRShiftAttend", "HRShiftAttend")
                        .WithMany("HRAttendances")
                        .HasForeignKey("HRShiftAttendId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRShiftAttend");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRBenefits", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRBenefitsType", "HRBenefitsType")
                        .WithMany("HRBenefits")
                        .HasForeignKey("HRBenefitsTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRBenefits")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRBenefitsType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRContract", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRContractType", "HRContractType")
                        .WithMany("HRContract")
                        .HasForeignKey("ContractTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRContract")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRContractType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDocuments", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRApplication", "HRApplication")
                        .WithMany("HRDocuments")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HREmployeeRule", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.FinancialYear", "FinancialYear")
                        .WithMany()
                        .HasForeignKey("FinancialYearID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRVacationRule", "HRVacationRule")
                        .WithMany("HREmployeeRule")
                        .HasForeignKey("VacationRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialYear");

                    b.Navigation("HRVacationRule");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRExpenses", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRJobPositions", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRDepartment", "HRDepartment")
                        .WithMany("HRJobPositions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRDepartment");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRMission", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRMissionType", "HRMissionType")
                        .WithMany("HRMission")
                        .HasForeignKey("HRMissionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRMission")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRMissionType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRNotes", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRApplication", "HRApplication")
                        .WithMany("HRNotes")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HROverTimes", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPenalty", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRPenaltyTypes", "HRPenaltyTypes")
                        .WithMany("HRPenalty")
                        .HasForeignKey("HRPenaltyTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRPenalty")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRPenaltyTypes");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPermission", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRPermission")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRRequest", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRRequestType", "HRRequestType")
                        .WithMany("HRRequest")
                        .HasForeignKey("HRRequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany("HRRequest")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRRequestType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRTeamWorkDetails", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRTeamWork", "HRTeamWork")
                        .WithMany("HRTeamWorkDetails")
                        .HasForeignKey("HRTeamWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", null)
                        .WithMany("HRTeamWorkDetails")
                        .HasForeignKey("PartnerId");

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRTeamWork");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationRuleLine", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRVacationRule", "HRVacationRule")
                        .WithMany("HRVacationRuleLine")
                        .HasForeignKey("VacationRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRVacationType", "HRVacationType")
                        .WithMany("HRVacationRuleLine")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRVacationRule");

                    b.Navigation("HRVacationType");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacations", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.HREntities.Partner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRVacationType", "HRVacationType")
                        .WithMany("HRVacations")
                        .HasForeignKey("VacationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRVacationType");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.Partner", b =>
                {
                    b.HasOne("StreamLinerEntitiesLayer.Entities.ResourceCity", "ResourceCity")
                        .WithMany("Partner")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRCompany", "HRCompany")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.HREntities.HRDepartment", "HRDepartment")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ResourceGender", "ResourceGender")
                        .WithMany("Partner")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ResourceMaritalStatus", "ResourceMaritalStatus")
                        .WithMany("Partner")
                        .HasForeignKey("MaritalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreamLinerEntitiesLayer.Entities.ResourceNationality", "ResourceNationality")
                        .WithMany("Partner")
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HRCompany");

                    b.Navigation("HRDepartment");

                    b.Navigation("ResourceCity");

                    b.Navigation("ResourceGender");

                    b.Navigation("ResourceMaritalStatus");

                    b.Navigation("ResourceNationality");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("Folders");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Field", b =>
                {
                    b.Navigation("MetaDataTemplateFields");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Folder", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Groups", b =>
                {
                    b.Navigation("UsersGroup");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.Meeting", b =>
                {
                    b.Navigation("MettingUsers");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MeetingRoom", b =>
                {
                    b.Navigation("Mettings");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.MetaDataTemplate", b =>
                {
                    b.Navigation("MetaDataTemplateFields");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceCity", b =>
                {
                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceGender", b =>
                {
                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceMaritalStatus", b =>
                {
                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.ResourceNationality", b =>
                {
                    b.Navigation("Partner");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.Entities.TaskList", b =>
                {
                    b.Navigation("TasksAttachments");

                    b.Navigation("TasksUsers");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRAllowanceType", b =>
                {
                    b.Navigation("HRAllowance");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRApplication", b =>
                {
                    b.Navigation("HRDocuments");

                    b.Navigation("HRNotes");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRBenefitsType", b =>
                {
                    b.Navigation("HRBenefits");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRCompany", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRContractType", b =>
                {
                    b.Navigation("HRContract");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDegree", b =>
                {
                    b.Navigation("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRDepartment", b =>
                {
                    b.Navigation("HRApplication");

                    b.Navigation("HRJobPositions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRMissionType", b =>
                {
                    b.Navigation("HRMission");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRPenaltyTypes", b =>
                {
                    b.Navigation("HRPenalty");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRRequestType", b =>
                {
                    b.Navigation("HRRequest");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRShiftAttend", b =>
                {
                    b.Navigation("HRAttendances");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRSource", b =>
                {
                    b.Navigation("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRStage", b =>
                {
                    b.Navigation("HRApplication");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRTeamWork", b =>
                {
                    b.Navigation("HRTeamWorkDetails");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationRule", b =>
                {
                    b.Navigation("HREmployeeRule");

                    b.Navigation("HRVacationRuleLine");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.HRVacationType", b =>
                {
                    b.Navigation("HRVacationRuleLine");

                    b.Navigation("HRVacations");
                });

            modelBuilder.Entity("StreamLinerEntitiesLayer.HREntities.Partner", b =>
                {
                    b.Navigation("HRBenefits");

                    b.Navigation("HRContract");

                    b.Navigation("HRMission");

                    b.Navigation("HRPenalty");

                    b.Navigation("HRPermission");

                    b.Navigation("HRRequest");

                    b.Navigation("HRTeamWorkDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
